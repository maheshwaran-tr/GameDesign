HTML
<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="stylesheet" href="style.css">

    <script src="mem.js" defer></script>

    <title>Memory Game</title>

</head>

<body>

    <h3>Memory Game</h3>

    <div id="gameBoard" class="game">
    </div>
</body>

</html>



CSS
body{

    margin:0;

    padding:0;

    font-family:Verdana, Geneva, Tahoma, sans-serif;

    background-color: #f5e8ba;

}



h3{

    font-size:2rem;

    text-align: center;

    color:crimson

}



.game{

    display:grid;

    margin:40px auto;

    grid-template-columns: repeat(4,120px);

    grid-row-gap:2em;

    align-items: center;

    justify-content: center;

}



#gameBoard div{

    height:150px;

    width:80px;

    border:2px solid rgb(151, 151, 202);

    display:flex;

    align-items: center;

    justify-content: center;

    font-size:2em;

    color:brown;

    background-color: #e5e5f7;

}



.cardback{

    background-color: #e5e5f7;

    opacity: 0.8;

    background-image:  linear-gradient(135deg, #444cf7 25%, transparent 25%), linear-gradient(225deg, #444cf7 25%, transparent 25%), linear-gradient(45deg, #444cf7 25%, transparent 25%), linear-gradient(315deg, #444cf7 25%, #e5e5f7 25%);

    background-position:  10px 0, 10px 0, 0 0, 0 0;

    background-size: 10px 10px;

    background-repeat: repeat;

}



#gameBoard div:hover{

    cursor:pointer;

}



.won{

    font-size:3em;

    display:flex;

    justify-content:center;

    height:500px;

    align-items: center;

    color:blue;

    width:500px;

    margin:0px auto;
}



JAVASCRIPT 
const cardsArray = [

    {

        name:'dog',

        icon:'<i class="fa-solid fa-dog"></i>'

    },

    {

        name:'hippo',

        icon:'<i class="fa-solid fa-hippo"></i>'

    },

    {

        name:'fish',

        icon:'<i class="fa-solid fa-fish"></i>'

    },

    {

        name:'cat',

        icon:'<i class="fa-solid fa-cat"></i>'

    },

    {

        name:'spider',

        icon:'<i class="fa-solid fa-spider"></i>'

    },

    {

        name:'frog',

        icon:'<i class="fa-solid fa-frog"></i>'

    },

    {

        name:'dog',

        icon:'<i class="fa-solid fa-dog"></i>'

    },

    {

        name:'hippo',

        icon:'<i class="fa-solid fa-hippo"></i>'

    },

    {

        name:'fish',

        icon:'<i class="fa-solid fa-fish"></i>'

    },

    {

        name:'cat',

        icon:'<i class="fa-solid fa-cat"></i>'

    },

    {

        name:'spider',

        icon:'<i class="fa-solid fa-spider"></i>'

    },

    {

        name:'frog',

        icon:'<i class="fa-solid fa-frog"></i>'

    }

];



let flippedCards = [];

let matchedPairs = 0;

shuffleCards();

const gameBoard = document.getElementById('gameBoard')

displayCards();



function shuffleCards(){

    for(let i=cardsArray.length-1;i>=0;i--){

        const randIndex = Math.floor(Math.random()*(i+1));

        [cardsArray[i],cardsArray[randIndex]] = [cardsArray[randIndex],cardsArray[i]]

    }

}



function displayCards(){

    cardsArray.forEach((curr,index,arr)=>{

        const card = document.createElement('div');

        card.setAttribute('id',index);

        card.classList.add('cardback');

        card.classList.add('active');

        gameBoard.append(card); 

        card.addEventListener('click',flipCard);

    })

}



function flipCard(){

    if(flippedCards.length<2 && this.classList.contains('active')){

        let cardId = this.getAttribute('id');

        flippedCards.push(this);

        this.classList.remove('cardback');

        this.innerHTML = cardsArray[cardId].icon;

        if(flippedCards.length==2){

            setTimeout(checkMatch,1000);

        }

    }

}



function checkMatch(){

    const card1Id = flippedCards[0].getAttribute('id');

    const card2Id = flippedCards[1].getAttribute('id');

    if(cardsArray[card1Id].name === cardsArray[card2Id].name){

        flippedCards[0].style.border = 'none';

        flippedCards[0].style.backgroundColor = '#f5e8ba';

        flippedCards[0].innerHTML = '';

        flippedCards[0].classList.remove('active');

        flippedCards[1].classList.remove('active');

        flippedCards[1].style.border = 'none';

        flippedCards[1].style.backgroundColor = '#f5e8ba';

        flippedCards[1].innerHTML = "";

        matchedPairs++;

        checkGameOver();

    }

    else{

        flippedCards[0].innerHTML = '';

        flippedCards[0].classList.add('cardback');

        flippedCards[1].innerHTML = '';

        flippedCards[1].classList.add('cardback');

    }

    flippedCards = [];

}



function checkGameOver(){

    if(matchedPairs == cardsArray.length/2){

        while(gameBoard.firstChild){

            gameBoard.removeChild(gameBoard.firstChild)

        }

        gameBoard.innerHTML = 'You Won';

        gameBoard.classList.remove('game');

        gameBoard.classList.add('won');

    }

}
